buildscript {
    ext.kotlin_version = '1.2.0'
    repositories {
        //new forge repository
        maven { url "https://maven.minecraftforge.net" }
        maven { url 'https://repo.spongepowered.org/maven'}
        mavenCentral()
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT"
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "2.0.4"
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: 'kotlin'
apply plugin: 'org.spongepowered.mixin'

version = "1.0"
group = "dreamys.studio" //http://maven.apache.org/guides/mini/guide-naming-conventions.html
//noinspection GroovyUnusedAssignment
archivesBaseName = "stary" //name of the output jar

//noinspection GroovyUnusedAssignment
sourceCompatibility = targetCompatibility = 1.8 //using java 8
compileJava.options.encoding = "UTF-8"

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22" //mappings for 1.8.9
    makeObfSourceJar = false //disable creation of sources jar
}

configurations {
    shade
    compile.extendsFrom(shade)
}

repositories {
    maven { url 'https://repo.spongepowered.org/maven/' }
//    maven { url "https://repo.dreamys.studio/" }
    mavenCentral()
    //repos for libraries (not gradle plugins)
    //example:
    //maven { url "https://repo.hypixel.net/repository/Hypixel" }
}

dependencies {
    shade('org.spongepowered:mixin:0.7.10-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core' // we want to exclude this as well because 0.7.11 includes it too new for MC
    }

//    shade "studio.dreamys.lilac:lilac-1.0:1.0.0"

    shade "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    //shade will bundle your library to the output jar
    //your libraries will be accessible outside of intellij
    //example:
    //shade "net.hypixel:hypixel-api-transport-apache:4.1"

    //compile will make your library available only in this dev environment
    //your libraries wont be accessible outside of intellij
    //example:
    //compile "net.hypixel:hypixel-api-transport-apache:4.1"
}

processResources {
    //this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    //replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        //replace version and mcversion
        expand "version":project.version, "mcversion":project.minecraft.version
    }

    //copy everything else, that"s not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

shadowJar {
    dependencies {
        //we remove gson because it belongs to the public api and will break shading
        //exclude(dependency("com.google.code.gson:gson:2.8.6"))
    }
    configurations = [project.configurations.shade]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE //prevent duplicates
    classifier "" //prevent creation of unshadowed jar
}

reobf {
    //reobfuscate the shadowed jar
    shadowJar {}
}

jar {
    manifest {
//        attributes "FMLCorePlugin": "studio.dreamys.asm.FMLLoadingPlugin",
        attributes "FMLCorePlugin": "studio.dreamys.mixin.MixinLoader",
                "ForceLoadAsMod": true,
                "TweakOrder": 0,
                "ModSide": "CLIENT",
                'FMLCorePluginContainsFMLMod': true,
                'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'MixinConfigs': 'mixins.stary.json'
    }
}

sourceSets {
    main {
        ext.refMap = "mixins.stary.refmap.json"
    }
}

mixin {
    disableRefMapWarning = true
    defaultObfuscationEnv searge
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        languageVersion = "1.3"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}